---
import Layout from "../../layouts/Layout.astro";
import TagChip from "../../components/TagChip.astro";
import { format } from "date-fns";
import { cloudinaryImageBaseUrl } from "../../constants";

//TODO: Need to read the "tags" querystring and filter.
const posts = await Astro.glob("./*.md");
const sortedPosts = posts.sort(
  (a, b) => new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime(),
);
---

<Layout title="AG Blog">
  <main>
    <h1>Blog</h1>
    <div class="postsList">
      {
        sortedPosts.map((post) => (
          <div class="article" role="button" onclick={`location.href='${post.url}'`} tabindex="0">
            <img
              src={
                post.frontmatter.listImageUrl ??
                `${cloudinaryImageBaseUrl}/c_fill,ar_1:1,w_200/q_auto/${post.frontmatter.cloudinaryImageFileName}`
              }
              alt=""
            />

            <time datetime={post.frontmatter.date}>{format(new Date(post.frontmatter.date), "MMMM d, yyyy")}</time>
            <span class="author">{post.frontmatter.author && `by ${post.frontmatter.author}`}</span>
            <h2 class="title">{post.frontmatter.title}</h2>
            {post.frontmatter.description && <p class="description">{post.frontmatter.description}</p>}
            <span class="tags">
              {post.frontmatter.tags?.map((t: string) => (
                <TagChip tag={t} />
              ))}
            </span>
          </div>
        ))
      }
    </div>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: clamp(800px, 90vw, 90vw);
    color: light-dark(var(--dark1), var(--lite1));
    font-size: 20px;
  }

  h1 {
    font-size: 3rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 2em;
    color: light-dark(var(--dark1), var(--lite1));
  }

  div.postsList {
    display: grid;
    gap: 2rem;

    > .article {
      border: 1px solid light-dark(var(--dark1), var(--lite1));
      padding: 0;
      display: grid;
      grid-template-columns: 250px 1fr 1fr;
      grid-template-areas:
        "img date        author"
        "img title       title"
        "img description description"
        "img tags        tags";

      span.tags {
        grid-area: tags;
      }

      & img {
        grid-area: img;
      }

      time {
        grid-area: date;
        font-size: 0.75rem;
      }
      span.author {
        grid-area: author;
        font-size: 0.75rem;
      }
      h2.title {
        grid-area: title;
        margin: 0;
      }

      p.description {
        grid-area: description;
        margin: 1rem 0 0;
        color: light-dark(var(--dark1), var(--lite1));
      }
    }
  }
</style>
